## 浅拷贝和深拷贝

- 首先先要讲一下数据类型，数据类型分为两大类：
  - 基本数据类型：特点：直接存储在栈（stack）中的数据
  - 引用数据类型：特点：存储在栈中的是该对象的引用，而本体在堆内存中

![image-20220221200236018](C:\鲁宇\Typora图片位置\image-20220221200236018.png)

- 在任何编程语言中，除了**基本数据类型**（元类型）之外，还存在 **类的实例对象** 这个引用数据类型。而一般使用 『 **=** 』号做赋值操作的时候。对于基本数据类型，实际上是拷贝的它的值，但是对于对象而言，其实赋值的只是这个对象的引用，将原对象的引用传递过去，他们实际上还是指向的同一个对象。
  - 赋值：就是对基本数据类型直接拷贝值，对引用类型直接传递引用，因此还是指向的同一个对象
  - 而浅拷贝和深拷贝就是在这个基础之上做的区分，如果在拷贝这个对象的时候，只对基本数据类型进行了拷贝，而对引用数据类型只是进行了引用的传递，而没有真实的创建一个新的对象，则认为是浅拷贝。
  - 反之，在对引用数据类型进行拷贝的时候，创建了一个新的对象，并且复制其内的成员变量，则认为是深拷贝。

![image-20220221215022637](C:\鲁宇\Typora图片位置\image-20220221215022637.png)